name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, macos-latest-arm64]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: process-wick-linux
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: process-wick-macos-intel
          - os: macos-latest-arm64
            target: aarch64-apple-darwin
            artifact_name: process-wick-macos-apple-silicon

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Install target
        run: |
          if [ "${{ matrix.target }}" = "aarch64-apple-darwin" ]; then
            rustup target add ${{ matrix.target }}
          elif [ "${{ matrix.target }}" = "x86_64-apple-darwin" ]; then
            rustup target add ${{ matrix.target }}
          fi

      - name: Build
        run: |
          cargo build --release --target ${{ matrix.target }}
          cd target/${{ matrix.target }}/release/
          mv process-wick ${{ matrix.artifact_name }}
        env:
          CARGO_TERM_COLOR: always

      - name: Create release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: ${{ github.ref }}
          name: ${{ github.ref }}
          generate_release_notes: true
          make_latest: true
          files: |
            target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
