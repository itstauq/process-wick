name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build:
    name: Build and Release
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: process-wick-x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: process-wick-x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: process-wick-aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: process-wick-x86_64-pc-windows-msvc.exe
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Install target
        run: |
          rustup target add ${{ matrix.target }}

      - name: Build
        if: matrix.os != 'windows-latest'
        run: |
          cargo build --release --target ${{ matrix.target }}
          cd target/${{ matrix.target }}/release/
          mv process-wick ${{ matrix.artifact_name }}
        env:
          CARGO_TERM_COLOR: always

      - name: Build Windows
        if: matrix.os == 'windows-latest'
        run: |
          cargo build --release --target ${{ matrix.target }}
          cd target/${{ matrix.target }}/release/
          move process-wick.exe ${{ matrix.artifact_name }}
        env:
          CARGO_TERM_COLOR: always

      - name: Create release
        uses: svenstaro/upload-release-action@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag: ${{ github.ref }}
          release_name: ${{ github.ref_name }}
          asset_name: ${{ matrix.artifact_name }}
          make_latest: true
          file: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
